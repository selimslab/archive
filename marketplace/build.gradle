apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

// JDK 7
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://repo.eclipse.org/content/repositories/californium/'
    }
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'org.springframework:spring-core:4.3.10.RELEASE'
    compile 'org.springframework:spring-webmvc:4.3.10.RELEASE'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'org.apache.jena', name: 'jena-core', version: '3.0.1'
    compile group: 'org.apache.jena', name: 'jena-arq', version: '3.0.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.0.1'
    compile group: 'com.github.jsonld-java', name: 'jsonld-java', version: '0.8.3'
    compile group: 'javax.mail', name: 'mail', version: '1.4.1'
    compile 'com.google.api-client:google-api-client:1.22.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.22.0'
    compile 'com.google.apis:google-api-services-gmail:v1-rev53-1.22.0'
    compile group: 'com.mailjet', name: 'mailjet-client', version: '4.0.1'
    compile group: 'org.eclipse.californium', name: 'cf-rd', version: '1.0.1'
    compile group: 'org.antlr', name: 'ST4', version: '4.0.8'
    compile 'javax.servlet:jstl:1.2'
}

gretty {
    httpPort = 8080
    contextPath = "marketplace"
    scanInterval = 0
    jvmArgs  = [
            "-Dhttp.proxyHost=194.145.60.1",
            "-Dhttp.proxyPort=9400",
            "-Dhttps.proxyHost=194.145.60.1",
            "-Dhttps.proxyPort=9400",
            "-Deu.bigiot.generatorImpl=sync" // async OR sync
    ]
}



///////////////////////////
// tasks to build the model outside of the Web application:
/////////

task createRdfStore(type: JavaExec) {
    main = 'eu.bigiot.marketplace.database.RDFCreator'
    classpath = sourceSets.main.runtimeClasspath
}

task importFiles(type: JavaExec) {
	jvmArgs  = [
            "-Dhttp.proxyHost=194.145.60.1",
            "-Dhttp.proxyPort=9400",
            "-Dhttps.proxyHost=194.145.60.1",
            "-Dhttps.proxyPort=9400"
    ]
    if (project.hasProperty('files')) {
        args(files.split(','))
    }
    if (System.getenv("http_proxy") || System.getenv("HTTP_PROXY")) {
        systemProperties = [
                "java.net.useSystemProxies": "true"
        ]
    }
    main = 'eu.bigiot.marketplace.database.RDFImporter'
    classpath = sourceSets.main.runtimeClasspath
}

task applyRules(type: JavaExec) {
    main = 'eu.bigiot.marketplace.database.RDFRuleApplier'
    classpath = sourceSets.main.runtimeClasspath
}

///////////////////////////




task runScript(type: JavaExec) {
    standardInput = System.in
    if (project.hasProperty('recipe')) {
        main = 'eu.bigiot.marketplace.sample_scripts.' + recipe
    }
    classpath = sourceSets.main.runtimeClasspath
}

task runCoap(type: JavaExec) {
    if (project.hasProperty('params')) {
        args(params.split(','))
    }
    main = 'eu.bigiot.marketplace.controllers.TestCoapClient'
    classpath = sourceSets.main.runtimeClasspath
}

//For Eclipse IDE only
eclipse {

    wtp {
        component {

            //define context path, default to project folder name
            contextPath = 'marketplace'

        }

    }
}


def dependenciesArtifactName = "bigiot-market"
def distributionsDir = "distributions"

artifacts {   
    archives(file("$buildDir/${distributionsDir}/${dependenciesArtifactName}-${version}.zip")) {
        name dependenciesArtifactName
        type 'zip'
    }
}

